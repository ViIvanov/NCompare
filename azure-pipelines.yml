trigger:
- main
- feature/*

strategy:
  matrix:
    Windows_Debug:
      image: 'windows-latest'
      isWindows: true
      buildConfiguration: 'Debug'
    Windows_Release:
      image: 'windows-latest'
      isWindows: true
      buildConfiguration: 'Release'
      publishArtifacts: true
    Ubuntu_Debug:
      image: 'ubuntu-latest'
      buildConfiguration: 'Debug'
    Ubuntu_Release:
      image: 'ubuntu-latest'
      buildConfiguration: 'Release'
    MacOS_Debug:
      image: 'macOS-latest'
      buildConfiguration: 'Debug'
    MacOS_Release:
      image: 'macOS-latest'
      buildConfiguration: 'Release'

pool:
  vmImage: $(image)

variables:
  solution: '**/*.sln'
  #buildConfiguration: '$(buildConfiguration)'
  excludeDotNetFramework: $[ ne(variables.isWindows, 'true') ]
  #publishArtifacts: $(publishArtifacts)

steps:

- task: UseDotNet@2
  displayName: 'Install .NET'
  inputs:
    version: '7.x'
    performMultiLevelLookup: true

- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration "$(buildConfiguration)" /p:ContinuousIntegrationBuild=true /p:DeterministicSourcePaths=true /p:ExcludeDotNetFramework=$(excludeDotNetFramework) --version-suffix "ci-$(Build.SourceBranchName)-$(Build.BuildNumber)"'

- task: DotNetCoreCLI@2
  displayName: 'Run tests'
  inputs:
    command: 'test'
    projects: '$(solution)'
    arguments: '--no-build --configuration "$(buildConfiguration)" --collect "Code coverage"'

- task: CopyFiles@2
  displayName: 'Copy artifacts'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/Source/NCompare/bin/$(buildConfiguration)'
    Contents: |
      NCompare.*.nupkg
      NCompare.*.snupkg
    TargetFolder: '$(Build.StagingDirectory)'
  condition: and(succeeded(), eq(variables.publishArtifacts, 'true'))

- task: PublishPipelineArtifact@1
  displayName: 'Publish artifacts'
  inputs:
    targetPath: '$(Build.StagingDirectory)'
    artifact: 'NuGet Packages'
  condition: and(succeeded(), eq(variables.publishArtifacts, 'true'))
